name: "Release"

on:
  push:
    branches:
      - main
# on:
#   workflow_dispatch:

env:
  ATC_EMAIL: 'atcnet.org@gmail.com'
  ATC_NAME: 'Atc-Net'
  NUGET_REPO_URL: 'https://api.nuget.org/v3/index.json'

jobs:
  release:
    if: github.ref == 'refs/heads/stable'
    runs-on: windows-latest
    steps:
      - name: üõí Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_WORKFLOWS }}

      - name: ‚öõÔ∏è Sets environment variables - branch-name
        uses: nelonoel/branch-name@v1.0.1

      - name: ‚öõÔ∏è Sets environment variables - Nerdbank.GitVersioning
        uses: dotnet/nbgv@master
        with:
          setAllVars: true

      - name: ‚öôÔ∏è Setup dotnet 7.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'

      - name: üìê Ensure nuget.org added as package source on Windows
        run: dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org --configfile $env:APPDATA\NuGet\NuGet.Config
        continue-on-error: true

      - name: üîÅ Restore packages
        run: dotnet restore Atc.Installer-WithoutSetup.sln

      - name: üß™ Run unit tests with MSBuild
        run: |
          $vsWhereExePath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
          $vsInstallationPath = & $vsWhereExePath -latest -products * -requires Microsoft.Component.MSBuild -property installationPath
          $vstestPath = Join-Path $vsInstallationPath "Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe"
          $testAssemblies = (Get-ChildItem -Recurse -Filter *.Test.dll).FullName
          & $vstestPath $testAssemblies
        shell: pwsh

      - name: ‚è© Merge to release-branch
        run: |
          git config --local user.email ${{ env.ATC_EMAIL }}
          git config --local user.name ${{ env.ATC_NAME }}
          git checkout release
          git merge --ff-only stable
          git push origin release