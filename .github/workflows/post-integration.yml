name: "Post-Integration"

on:
  push:
    branches:
      - main
      - '!stable'
      - '!release'

env:
  ATC_EMAIL: 'atcnet.org@gmail.com'
  ATC_NAME: 'Atc-Net'
  NUGET_REPO_URL: 'https://nuget.pkg.github.com/atc-net/index.json'

jobs:
  merge-to-stable:
    runs-on: windows-latest
    steps:
      - name: üõí Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.PAT_WORKFLOWS }}

      - name: ‚öõÔ∏è Sets environment variables - branch-name
        uses: nelonoel/branch-name@v1.0.1

      - name: ‚öõÔ∏è Sets environment variables - Nerdbank.GitVersioning
        uses: dotnet/nbgv@master
        with:
          setAllVars: true

      - name: ‚öôÔ∏è Setup dotnet 7.0.x
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.0.x'

      - name: ‚öôÔ∏è Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu'

      - name: üìê Ensure nuget.org added as package source on Windows
        run: dotnet nuget add source https://api.nuget.org/v3/index.json -n nuget.org --configfile $env:APPDATA\NuGet\NuGet.Config
        continue-on-error: true

      - name: üîÅ Restore packages
        run: dotnet restore Atc.Installer-WithoutSetup.sln

      - name: üõ†Ô∏è Building library in release mode with MSBuild
        run: |
          $vsWhereExePath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
          $vsInstallationPath = & $vsWhereExePath -latest -products * -requires Microsoft.Component.MSBuild -property installationPath
          $msBuildExePath = Join-Path $vsInstallationPath "MSBuild\Current\Bin\MSBuild.exe"
          & $msBuildExePath Atc.Installer-WithoutSetup.sln -p:Configuration=Release -p:Platform="Any CPU" -m
        shell: pwsh

      - name: üß™ Run unit tests with MSBuild
        run: |
          $vsWhereExePath = "${env:ProgramFiles(x86)}\Microsoft Visual Studio\Installer\vswhere.exe"
          $vsInstallationPath = & $vsWhereExePath -latest -products * -requires Microsoft.Component.MSBuild -property installationPath
          $vstestPath = Join-Path $vsInstallationPath "Common7\IDE\CommonExtensions\Microsoft\TestWindow\vstest.console.exe"
          $testAssemblies = (Get-ChildItem -Recurse -Filter *.UnitTest.dll).FullName
          & $vstestPath $testAssemblies
        shell: pwsh

      # - name: üå©Ô∏è SonarCloud install scanner
        # run: dotnet tool install --global dotnet-sonarscanner

      # - name: üå©Ô∏è SonarCloud analyze
        # env:
          # GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        # shell: pwsh
        # run: |
          # dotnet sonarscanner begin /k:"atc-wpf" /o:"atc-net" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          # dotnet build Atc.Installer-WithoutSetup.sln -c Release /p:UseSourceLink=true --no-restore
          # dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: ‚è© Merge to stable-branch
        run: |
          git config --local user.email ${{ env.ATC_EMAIL }}
          git config --local user.name ${{ env.ATC_NAME }}
          git checkout stable
          git merge --ff-only main
          git push origin stable

      # - name: üó≥Ô∏è Creating library package for pre-release
        # run: dotnet pack Atc.Installer-WithoutSetup.sln -c Release --no-restore -o ${GITHUB_WORKSPACE}/packages -p:RepositoryBranch=$BRANCH_NAME
